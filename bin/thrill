#!/usr/bin/env node

var app = require('commander'),
	vm = require('vm'),
	path = require('path'),
	fs = require('fs'),
	utils = require('../lib/utils.js'),
	thrillRunner = require('../').runner,
	configDir = require('../').configDir,
	commandHandlerConfig = require(configDir + '/commands.json'),
	commandHandlers = {},
	startThrill = true,
	config = {};

// RESOLVE COMMAND PATHS
utils.each(commandHandlerConfig, function(filePath, command){
	if(filePath[0] === '.') filePath = path.resolve(configDir, filePath);
	try{
		commandHandlers[command] = filePath;
	} catch(e){
		console.log('Error in importing command: ' + command);
		console.log(e);
	}
});

app.version('0.3.0')	

app.option('-h, --host [host]', 'The host of the Queen server')
	.option('-s, --serve [serve]', 'The directory to serve as the base path for')
	.option('-r, --reporter [reporter]', 'Set the reporter')
	.option('--noAutoAdapt', 'Disable auto adapting of libraries')
	.option('-q, --quiet', 'Don\'t output anything to output stream')
	.option('-v, --verbose', 'Whether to log verbosely');


// Overwrite any command handler, that's one thing we can't overwrite
commandHandlers["command"] = "./command/command.js";
utils.each(commandHandlers, function(handlerFilePath, command){
	app.command(command).action(function(){
		var handler = require(handlerFilePath);
		handler.apply(void 0, arguments);
		startThrill = false;	
	});
});

app.command("*").action(function(filePath){
	var args = Array.prototype.slice.call(arguments, 0);
	// Discard the last arg, which is commander
	args.pop();
	
	// Heuristics: If more than one file, this is a run list, otherwise, we can't
	// be sure.
	if(args.length !== 1){
		config.run = args;
	} else {
		config.file = path.resolve(process.cwd(), filePath);
	}
});

app.on('--help', function(){
  console.log('  Examples:');
  console.log('');
  console.log('  Start thrill in a directory with a thrill.js config file:');
  console.log('    $ thrill');
  console.log('');
  console.log('  Start thrill, connecting to the Queen host "queen.turn.com" on port 9300:');
  console.log('    $ thrill -h queen.turn.com:9300');
  console.log('');
  console.log('  Run the tests in file "test.html" with thrill:');
  console.log('    $ thrill test.html');
  console.log('');
  console.log('  Run the tests in file "test.html" with thrill, seving the parent directory as the root directory:');
  console.log('    $ thrill -s ../ test.html');
  console.log('');
  console.log('  Run test scripts:');
  console.log('    $ thrill qunit.js my-tests/**/*.js');
  console.log('');
});

app.parse(process.argv);

if(!startThrill) return;

config.host = app.host;
config.quiet = app.quiet;
config.verbose = app.verbose;
config.reporter = app.reporter;
if(app.noAutoAdapt !== void 0) config.autoAdapt = !app.noAutoAdapt;
if(app.serve !== void 0) config.serve = app.serve;

// Set the default config file
if(!config.run && !config.file) config.file = path.resolve(process.cwd(), "thrill.js");

thrillRunner(config, function(passed){
	if(passed){
		process.exit(0);
	} else {
		process.exit(1);
	}
});